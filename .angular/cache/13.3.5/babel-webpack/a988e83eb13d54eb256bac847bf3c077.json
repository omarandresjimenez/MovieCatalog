{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/core.service\";\nexport let OverlayRequestResponseInterceptor = /*#__PURE__*/(() => {\n  class OverlayRequestResponseInterceptor {\n    constructor(coreserv) {\n      this.coreserv = coreserv;\n    }\n\n    intercept(req, next) {\n      this.coreserv.callHttpRequest(true);\n      return next.handle(req).pipe(tap(event => {\n        if (event instanceof HttpResponse) {\n          this.coreserv.callHttpRequest(false);\n        }\n      }), catchError(err => {\n        this.coreserv.callHttpRequest(false);\n        return throwError(err);\n      }));\n    }\n\n  }\n\n  OverlayRequestResponseInterceptor.ɵfac = function OverlayRequestResponseInterceptor_Factory(t) {\n    return new (t || OverlayRequestResponseInterceptor)(i0.ɵɵinject(i1.CoreService));\n  };\n\n  OverlayRequestResponseInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OverlayRequestResponseInterceptor,\n    factory: OverlayRequestResponseInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n  return OverlayRequestResponseInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}