{"ast":null,"code":"import { environment } from '@environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MovieApiService = /*#__PURE__*/(() => {\n  class MovieApiService {\n    constructor(http) {\n      this.http = http;\n      this.BASEURL = environment.baseUrlApiMovie;\n      this.MAX_RESULTS = 50;\n    }\n\n    movieSearch(search) {\n      return this.http.get(this.BASEURL + 'search/shows?q=' + (!search ? 'a' : search)).pipe(map(res => res.map(item => {\n        const obj = {\n          id: item.show.id,\n          name: item.show.name,\n          image: item.show.image,\n          summary: item.show.summary,\n          rating: item.show.rating.average,\n          genres: item.show.genres\n        };\n        return obj;\n      })));\n    }\n\n    movieCast(id) {\n      return this.http.get(this.BASEURL + 'shows/' + id + '/cast').pipe(map(res => res.slice(0, this.MAX_RESULTS).map(item => {\n        var _a;\n\n        const obj = {\n          id: item.person.id,\n          name: item.person.name,\n          image: (_a = item.person.image) === null || _a === void 0 ? void 0 : _a.medium\n        };\n        return obj;\n      })));\n    }\n\n  }\n\n  MovieApiService.ɵfac = function MovieApiService_Factory(t) {\n    return new (t || MovieApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MovieApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MovieApiService,\n    factory: MovieApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return MovieApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}