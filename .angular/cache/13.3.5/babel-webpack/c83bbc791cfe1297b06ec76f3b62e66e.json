{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EnsureModuleLoadedOnceGuard } from './ensure-module-loaded-once.guard';\nimport { OverlayModule } from './overlay/overlay.module';\nimport * as i0 from \"@angular/core\";\nexport let CoreModule = /*#__PURE__*/(() => {\n  class CoreModule extends EnsureModuleLoadedOnceGuard {\n    // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n    constructor(parentModule) {\n      super(parentModule);\n    }\n\n  }\n\n  CoreModule.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n  };\n\n  CoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  CoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [] // these should be singleton\n    ,\n    imports: [[CommonModule, RouterModule, HttpClientModule, OverlayModule], RouterModule, HttpClientModule, OverlayModule]\n  });\n  return CoreModule;\n})();","map":null,"metadata":{},"sourceType":"module"}