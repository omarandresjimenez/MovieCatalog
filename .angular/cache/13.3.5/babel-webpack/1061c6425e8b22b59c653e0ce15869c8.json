{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\n\nfunction UserListComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 2);\n    i0.ɵɵlistener(\"click\", function UserListComponent_tr_1_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEditUser(user_r1.userName, user_r1.userRole === \"admin\");\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"i\", 3);\n    i0.ɵɵlistener(\"click\", function UserListComponent_tr_1_Template_i_click_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onDelete($event, user_r1.userName);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.userRole === \"admin\" ? \"admin\" : \"user\");\n  }\n}\n\nexport let UserListComponent = /*#__PURE__*/(() => {\n  class UserListComponent {\n    constructor(service, toast, cdr) {\n      this.service = service;\n      this.toast = toast;\n      this.cdr = cdr;\n      this.editUser = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.users$ = this.service.getUsers();\n      this.service.newUserAdded$.subscribe(() => {\n        this.users$ = this.service.getUsers();\n        this.cdr.markForCheck();\n      });\n    }\n\n    onDelete($event, userName) {\n      $event.stopPropagation();\n\n      if (confirm('Are you sure?')) {\n        this.service.deleteUser(userName).subscribe(res => {\n          this.toast.success('User removed successfuly');\n          this.users$ = this.service.getUsers();\n          this.cdr.markForCheck();\n        });\n      }\n    }\n\n    onEditUser(userName, userRole) {\n      this.editUser.emit({\n        userName,\n        userRole\n      });\n    }\n\n  }\n\n  UserListComponent.ɵfac = function UserListComponent_Factory(t) {\n    return new (t || UserListComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  UserListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserListComponent,\n    selectors: [[\"app-user-list\"]],\n    outputs: {\n      editUser: \"editUser\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[1, \"table\", \"table-hover\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"far\", \"fa-trash-alt\", \"fa-lg\", \"text-danger\", 3, \"click\"]],\n    template: function UserListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵtemplate(1, UserListComponent_tr_1_Template, 7, 2, \"tr\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.users$));\n      }\n    },\n    directives: [i3.NgForOf],\n    pipes: [i3.AsyncPipe],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n  return UserListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}