{"ast":null,"code":"import { of, throwError } from 'rxjs';\nexport class AppHttpErrorHandler {\n  constructor(routerP, toastP) {\n    this.routerP = routerP;\n    this.toastP = toastP;\n    this.router = routerP;\n    this.toast = toastP;\n  }\n\n  handleError(res) {\n    switch (true) {\n      case res.status === 401:\n        sessionStorage.clear();\n        this.router.navigate(['/']);\n        return of(null);\n\n      case res.status >= 500:\n        this.toast.error('Unexpected server error');\n        return throwError(res);\n\n      case !!res.error.message || !!res.message:\n        this.toast.error(res.error.message || res.message);\n        return throwError(res);\n\n      default:\n        return throwError(res);\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}