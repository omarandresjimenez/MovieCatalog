{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction UserFormComponent_div_9_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2, \"Invalid password (5 - 16 characters) \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵelement(4, \"i\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"input\", 22, 23);\n    i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_div_9_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.userData.userPassword = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, UserFormComponent_div_9_div_7_Template, 3, 0, \"div\", 24);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(6);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"green-icon\", _r4.valid)(\"red-icon\", _r4.invalid && _r4.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.userData.userPassword);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.invalid && _r4.touched);\n  }\n}\n\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    constructor(service, toast, cdr) {\n      this.service = service;\n      this.toast = toast;\n      this.cdr = cdr;\n      this.newUser = true;\n      this.userData = {\n        userName: '',\n        userPassword: '',\n        userAdmin: false\n      };\n      this.userToEdit = {};\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges() {\n      if (this.userToEdit) {\n        this.newUser = false;\n        this.userData = {\n          userName: this.userToEdit.userName,\n          userPassword: '',\n          userAdmin: this.userToEdit.userRole\n        };\n      }\n    }\n\n    onSubmit() {\n      if (this.newUser) {\n        this.service.createUser(this.userData).subscribe(res => {\n          this.toast.success('User Created Successfuly');\n          this.service.notifyNewUser();\n          this.resetForm();\n        }, err => {\n          this.toast.error('User already exist');\n        });\n      } else {\n        this.service.updateUser(this.userData).subscribe(res => {\n          this.toast.success('User Updated Successfuly');\n          this.service.notifyNewUser();\n          this.resetForm();\n        }, err => {\n          this.toast.error('User do not exist');\n        });\n      }\n    }\n\n    resetForm(form) {\n      this.newUser = true;\n      this.userData = {\n        userName: '',\n        userPassword: '',\n        userAdmin: false\n      };\n\n      if (form != null) {\n        form.form.reset();\n      }\n\n      this.cdr.markForCheck();\n    }\n\n  }\n\n  UserFormComponent.ɵfac = function UserFormComponent_Factory(t) {\n    return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  UserFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserFormComponent,\n    selectors: [[\"app-user-form\"]],\n    inputs: {\n      userToEdit: \"userToEdit\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 29,\n    vars: 9,\n    consts: [[\"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", \"bg-white\"], [1, \"fas\", \"fa-user-circle\"], [\"name\", \"userName\", \"placeholder\", \"User Name\", \"required\", \"\", \"maxlength\", \"40\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"userName\", \"ngModel\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"input-group\", \"col-md-3\", \"float-left\"], [\"type\", \"checkbox\", \"name\", \"userAdmin\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"userAdmin\", \"ngModel\"], [\"for\", \"userAdmin\"], [1, \"col-md-9\", \"float-right\"], [1, \"form-group\", 2, \"display\", \"flex\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"btn-block\", \"col-md-5\", 3, \"click\"], [1, \"fas\", \"fa-plus\"], [1, \"col-md-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"btn-block\", \"col-md-5\", 3, \"disabled\"], [1, \"fas\", \"fa-database\"], [1, \"fas\", \"fa-key\"], [\"type\", \"password\", \"name\", \"userPassword\", \"placeholder\", \"password\", \"required\", \"\", \"maxlength\", \"16\", \"minlength\", \"5\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"userPassword\", \"ngModel\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n    template: function UserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function UserFormComponent_Template_form_submit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"i\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"input\", 7, 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.userData.userName = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(9, UserFormComponent_div_9_Template, 8, 6, \"div\", 9);\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 10)(12, \"input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.userData.userAdmin = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\", 13);\n        i0.ɵɵtext(15, \"Admin user\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 14)(17, \"div\", 3);\n        i0.ɵɵtext(18, \" \\u00A0 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(19, \"BR\")(20, \"BR\");\n        i0.ɵɵelementStart(21, \"div\", 15)(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_22_listener() {\n          i0.ɵɵrestoreView(_r8);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return ctx.resetForm(_r0);\n        });\n        i0.ɵɵelement(23, \"i\", 17);\n        i0.ɵɵtext(24, \" New User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"div\", 18);\n        i0.ɵɵelementStart(26, \"button\", 19);\n        i0.ɵɵelement(27, \"i\", 20);\n        i0.ɵɵtext(28, \" Save\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(8);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵclassProp(\"green-icon\", _r1.valid)(\"red-icon\", _r1.invalid && _r1.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.userData.userName)(\"disabled\", !ctx.newUser);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.newUser);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.userData.userAdmin);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.RequiredValidator, i3.MaxLengthValidator, i3.NgControlStatus, i3.NgModel, i4.NgIf, i3.MinLengthValidator, i3.CheckboxControlValueAccessor],\n    styles: [\".error[_ngcontent-%COMP%]{color:red;font-size:small}\"],\n    changeDetection: 0\n  });\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}