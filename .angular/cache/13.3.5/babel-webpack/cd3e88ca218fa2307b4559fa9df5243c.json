{"ast":null,"code":"import { BehaviorSubject, Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/movie.api\";\nexport let MovieCatalogService = /*#__PURE__*/(() => {\n  class MovieCatalogService {\n    constructor(service) {\n      this.service = service;\n      this.movieCatalog$ = new Observable();\n      this.ratingFilter$ = new Observable();\n      this.movieCatalog = new BehaviorSubject([]);\n      this.ratingFilter = new BehaviorSubject(1);\n      this.movieCatalog$ = this.movieCatalog.asObservable();\n      this.ratingFilter$ = this.ratingFilter.asObservable();\n    }\n\n    searchMovies(search) {\n      this.service.movieSearch(search).pipe(shareReplay(1)).subscribe(res => {\n        this.movieCatalog.next(res);\n      });\n    }\n\n    setRatingFilter(val) {\n      this.ratingFilter.next(val);\n    }\n\n    getCastMovie(id) {\n      return this.service.movieCast(id);\n    }\n\n  }\n\n  MovieCatalogService.ɵfac = function MovieCatalogService_Factory(t) {\n    return new (t || MovieCatalogService)(i0.ɵɵinject(i1.MovieApiService));\n  };\n\n  MovieCatalogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MovieCatalogService,\n    factory: MovieCatalogService.ɵfac,\n    providedIn: 'root'\n  });\n  return MovieCatalogService;\n})();","map":null,"metadata":{},"sourceType":"module"}