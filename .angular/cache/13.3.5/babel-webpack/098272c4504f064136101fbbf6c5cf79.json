{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { OverlayRequestResponseInterceptor } from './overlay-request-response.interceptor';\nimport { EnsureModuleLoadedOnceGuard } from '../ensure-module-loaded-once.guard';\nimport * as i0 from \"@angular/core\";\nexport let OverlayModule = /*#__PURE__*/(() => {\n  class OverlayModule extends EnsureModuleLoadedOnceGuard {\n    // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n    constructor(parentModule) {\n      super(parentModule);\n    }\n\n  }\n\n  OverlayModule.ɵfac = function OverlayModule_Factory(t) {\n    return new (t || OverlayModule)(i0.ɵɵinject(OverlayModule, 12));\n  };\n\n  OverlayModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: OverlayModule\n  });\n  OverlayModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: OverlayRequestResponseInterceptor,\n      multi: true\n    }],\n    imports: [[CommonModule]]\n  });\n  return OverlayModule;\n})();","map":null,"metadata":{},"sourceType":"module"}